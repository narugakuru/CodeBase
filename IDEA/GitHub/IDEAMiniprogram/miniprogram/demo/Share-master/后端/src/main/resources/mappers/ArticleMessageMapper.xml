<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="work.huangxin.share.mapper.ArticleMessageMapper">
    <resultMap id="BaseResultMap" type="work.huangxin.share.model.ArticleMessage">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="article_id" jdbcType="INTEGER" property="articleId"/>
        <result column="article_content" jdbcType="VARCHAR" property="articleContent"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="theme_id" jdbcType="INTEGER" property="themeId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>

        <association property="userMessage" javaType="work.huangxin.share.model.UserMessage">
            <id column="user_id" jdbcType="INTEGER" property="userId"/>
            <result column="user_nickname" jdbcType="VARCHAR" property="userNickname"/>
            <result column="user_gender" jdbcType="TINYINT" property="userGender"/>
            <result column="user_avatar" jdbcType="VARCHAR" property="userAvatar"/>
            <result column="user_motto" jdbcType="VARCHAR" property="userMotto"/>
        </association>
        <association property="themeMessage" javaType="work.huangxin.share.model.ThemeMessage">
            <id column="theme_id" jdbcType="INTEGER" property="themeId"/>
            <result column="theme_title" jdbcType="VARCHAR" property="themeTitle"/>
        </association>
        <collection property="commentMessages" ofType="work.huangxin.share.model.CommentMessage">
            <id column="comment_id" jdbcType="INTEGER" property="commentId"/>
            <result column="comment_content" jdbcType="VARCHAR" property="commentContent"/>
            <result column="article_id" jdbcType="INTEGER" property="articleId"/>
            <result column="user_id" jdbcType="INTEGER" property="userId"/>
            <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
            <association property="userMessage" javaType="work.huangxin.share.model.UserMessage">
                <id column="user_id" jdbcType="INTEGER" property="userId"/>
                <result column="user_nickname" jdbcType="VARCHAR" property="userNickname"/>
                <result column="user_avatar" jdbcType="VARCHAR" property="userAvatar"/>
            </association>
        </collection>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
        -->
        article_id, article_content, user_id, theme_id, create_time
    </sql>
    <select id="getNewArticle" resultMap="BaseResultMap">
        select article_message.article_id,
        article_message.user_id,
        article_message.theme_id,
        article_message.create_time,
        theme_message.theme_title,
        theme_message.theme_use,
        user_message.user_nickname,
        user_message.user_avatar,
        user_message.user_motto,
        user_message.user_gender,
        article_content
        from user_message,
        article_message
        left join theme_message on
        theme_message.theme_id = article_message.theme_id
        where user_message.user_id = article_message.user_id
        <if test="articleId!=null">
            and
            article_message.article_id = #{articleId}
        </if>
        <if test="userId!=null">
            and
            article_message.user_id = #{userId}
        </if>
        <if test="themeId!=null">
            and
            article_message.theme_id = #{themeId}
        </if>

        order by article_message.create_time
        desc

    </select>
    <select id="getNewArticleById" resultMap="BaseResultMap">
        select article_message.article_id,
        article_message.user_id,
        article_message.theme_id,
        article_message.create_time,
        article_content,
        theme_message.theme_title,
        theme_message.theme_use,
        u.user_nickname,
        u.user_avatar,
        u.user_motto,
        u.user_gender
        from user_message as u,
        article_message
        left join theme_message on
        theme_message.theme_id = article_message.theme_id
        where u.user_id = article_message.user_id
        and article_message.article_id = #{articleId}
    </select>
    <select id="getAllLikeArticle" resultMap="BaseResultMap">


        SELECT user_message.user_nickname,
        user_message.user_avatar,
        user_message.user_motto,
        user_message.user_gender,
        theme_message.theme_title,
        theme_message.theme_use,
        article.create_time,
        article.article_id,
        article.user_id,
        article.theme_id,
        article.article_content
        FROM user_message,
        article_message as article
        left join like_message
        on like_message.article_id = article.article_id
        left join theme_message on article.theme_id = theme_message.theme_id
        where DATE_SUB(CURDATE(), INTERVAL 1 WEEK) &lt;= date(article.create_time)
        and article.user_id = user_message.user_id
        group by article.article_id, article.create_time, article.article_id
        order by count(like_id) desc


    </select>


</mapper>